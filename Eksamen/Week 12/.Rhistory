sort(unique(not_colonized_data$Country))
# join gapminder data with your country lists
colonized_data <- colonized_data %>%
left_join(gapminder_unfiltered, by = c("Country" = "country"))
not_colonized_data <- not_colonized_data %>%
left_join(gapminder_unfiltered, by = c("Country" = "country"))
ggplot(colonized_data, aes(x = year, y = gdpPercap, group = Country, color = Country))+
geom_line()+
labs(title = "Mean GDP Over Time by Country",
x = "Year",
y = "Mean GDP (in USD)") +
theme_minimal() +                      # Minimal theme for a clean look
theme(legend.position = "right")
colonized_data %>%
select(Country, Colonial_Overlord) %>%
distinct(Country, Colonial_Overlord)
colonized_summary <- colonized_data %>%
filter(year %in% unique(gapminder$year)) %>%
group_by(Colonial_Overlord, year) %>%
summarize(gdpPerGroup = sum(gdpPercap))
ggplot(colonized_summary, aes(x = year, y = gdpPerGroup, group = Colonial_Overlord, color = Colonial_Overlord))+
geom_line()+
labs(title = "Mean GDP Over Time by Colonial power",
x = "Year",
y = "Mean GDP (in USD)") +
theme_minimal() +                      # Minimal theme for a clean look
theme(legend.position = "right")
colonized_data %>%
filter(Colonial_Overlord == "United Kingdom") %>%
filter(year == 1982 |year == 1983 | year == 1987| year == 1988) %>%
arrange(year)
# years xxx3 and xxx8 seems the problematic ones in the UK case, but others are in the other countries. Use gapminder reduced data years, those seem to exist everywhere?
# Load required libraries
library(ggplot2)
library(ggrepel)
# Assuming your data frame is 'colonized_data'
colonized_summary <- colonized_data %>%
filter(year %in% unique(gapminder$year)) %>%
#filter(!grepl("3$|8$", year)) %>%
group_by(Colonial_Overlord, year) %>%
summarize(gdpPerGroup = sum(gdpPercap))
# Find the last year for each country to label
last_year_data <- colonized_summary %>%
group_by(Colonial_Overlord) %>%
filter(year == max(year))  # Get the data for the last year per country
# Create the plot
ggplot(colonized_summary, aes(x = year, y = log(gdpPerGroup), group = Colonial_Overlord, color = Colonial_Overlord))+
geom_line()+
geom_text_repel(data = last_year_data,      # Use the last year data for labeling
aes(label = Colonial_Overlord),       # Label each country at the last data point
nudge_x = 15,                # Nudges labels slightly to the right for clarity
direction = "y",            # Keep labels vertical
hjust = 0) +                # Align the labels horizontally to the left
labs(title = "Mean GDP Over Time by Colonial power (natural log)",
x = "Year",
y = "Mean GDP (in USD)") +
theme_minimal()  #+                     # Minimal theme for a clean look
#theme(legend.position = "none")             # Hide the legend since we have direct labels
# Find the last year for each country to label
last_year_data <- colonized_summary %>%
group_by(Colonial_Overlord) %>%
filter(year == 1980)  # Get the data for the last year per country
ggplot(colonized_summary %>% filter(year < 1980), aes(x = year, y = log(gdpPerGroup), group = Colonial_Overlord, color = Colonial_Overlord))+
geom_line()+
geom_text_repel(data = last_year_data,      # Use the last year data for labeling
aes(label = Colonial_Overlord),       # Label each country at the last data point
nudge_x = 15,                # Nudges labels slightly to the right for clarity
direction = "y",            # Keep labels vertical
hjust = 0) +                # Align the labels horizontally to the left
labs(title = "Mean GDP Over Time by Colonial power (1950 - 1980)",
x = "Year",
y = "Mean GDP (in USD)") +
theme_minimal()
# let's check their results
ggplot(not_colonized_data, aes(x = year, y = gdpPercap, group = Country, color = Country))+
geom_line()+
# geom_text_repel(data = last_year_data,      # Use the last year data for labeling
#                 aes(label = Colonial_Overlord),       # Label each country at the last data point
#                 nudge_x = 15,                # Nudges labels slightly to the right for clarity
#                 direction = "y",            # Keep labels vertical
#                 hjust = 0) +                # Align the labels horizontally to the left
labs(title = "Not colonized for long (or at all): Mean GDP Over Time",
x = "Year",
y = "Mean GDP percapita (in USD)") +
theme_minimal()
nc_last_year_data <- not_colonized_data %>%
group_by(Country) %>%
filter(year == max(year))  # Get the data for the last year per country
# Expand this chart once it plots as it is rather detailed
not_colonized_data %>%
ggplot(aes(x = year, y = gdpPercap, group = Country, color = Country))+
geom_line()+
geom_text_repel(data = nc_last_year_data,      # Use the last year data for labeling
aes(label = Country),       # Label each country at the last data point
nudge_x = 15,                # Nudges labels slightly to the right for clarity
direction = "y",            # Keep labels vertical
hjust = 0) +                # Align the labels horizontally to the left
labs(title = "Not colonized for long (or at all): Mean GDP Over Time",
x = "Year",
y = "Total GDP (in USD)") +
theme_minimal() +
theme(legend.position = "none")
not_colonized_data <- not_colonized_data %>%
mutate(totalGdp = pop * gdpPercap)
# Consider whether we should be summarizing total or per capita GDP
not_colonized_ntiles <- not_colonized_data %>%
filter(year %in% unique(gapminder$year)) %>%
group_by(year) %>%
mutate(quantileGdp = ntile(gdpPercap, 5))
not_colonized_summary <- not_colonized_ntiles %>%
group_by(year, quantileGdp) %>%
summarize(gdpPerGroup = sum(gdpPercap),
meangdpPerGroup = mean(gdpPercap))
not_colonized_ntiles
# Find the last year for each country to label
ntile_last_year_data <- not_colonized_ntiles %>%
group_by(quantileGdp) %>%
filter(year == max(year)) %>%
summarize(gdpPerGroup = sum(gdpPercap)) # Get the data for the last year per country
# Logarithmic y axis!
ggplot(not_colonized_ntiles, aes(x = year, y = log10(gdpPercap), group = Country, color = Country))+
geom_line()+
geom_text_repel(data = nc_last_year_data,      # Use the last year data for labeling
aes(label = Country),       # Label each country at the last data point
nudge_x = 15,                # Nudges labels slightly to the right for clarity
direction = "y",            # Keep labels vertical
hjust = 0) +                # Align the labels horizontally to the left
labs(title = "Mean GDP Over Time by country",
x = "Year",
y = "Mean GDP (in USD)") +
theme_minimal() +
theme(legend.position = "none")
not_colonized_ntiles
# How are the best and worst countries moving economically over the last 60 years?
not_colonized_summary <- not_colonized_ntiles %>%
arrange(desc(year)) %>%
group_by(year, quantileGdp) %>%
summarize(gdpPerGroup = sum(gdpPercap),
meangdpPerGroup = mean(gdpPercap)) %>%
mutate(quantileGdp = as.factor(quantileGdp))
not_colonized_summary
# Extract data for the last year to use in geom_text_repel
ntile_last_year_data <- not_colonized_summary %>%
group_by(quantileGdp) %>%
filter(year == max(year))  # Extract the last year for each quantile
ntile_last_year_data
ggplot(not_colonized_summary, aes(x = year, y = gdpPerGroup, group = quantileGdp, color = quantileGdp))+
geom_line()+
geom_text_repel(data = ntile_last_year_data,      # Use the last year data for labeling
aes(x = year, y = gdpPerGroup, label = quantileGdp),       # Label each country at the last data point
nudge_x = 5,                # Nudges labels slightly to the right for clarity
direction = "y",            # Keep labels vertical
hjust = 0) +                # Align the labels horizontally to the left
labs(title = "Mean GDP Over Time by quantile",
x = "Year",
y = "Mean GDP (in USD)") +
theme_minimal()
# Who is in groups 1 and 5 at the start and the end?
not_colonized_ntiles %>%
filter(year == 1957 & quantileGdp == 5) %>%
select(Country, gdpPercap)
not_colonized_ntiles %>%
filter(year >2002 & quantileGdp == 5) %>%
select(Country, gdpPercap)
# Where is China in all this and how does its progress compare to e.g. Saudi Arabia?
not_colonized_ntiles %>%
filter(Country == "China") %>%
select(year, gdpPercap, quantileGdp)
not_colonized_ntiles %>%
filter(Country == "Saudi Arabia") %>%
select(year, gdpPercap, quantileGdp)
# Can you think of other 'climbers'?
# Run a basic linear regression model
model <- lm(gdpPercap ~ Colonial_Overlord, data = colonized_data)
# Summary of the regression results
summary(model)
model_interaction <- lm(gdpPercap ~ Years_of_Colonization * factor(Colonial_Overlord), data = colonized_data)
summary(model_interaction)
# Extract model coefficients
coefficients <- as.data.frame(coef(summary(model_interaction)))
# Create a column for variable names
coefficients$Variable <- rownames(coefficients)
# Split into main effects (Colonial_Overlord) and interaction terms (Colonial_Overlord × Year)
main_effects <- coefficients %>%
filter(grepl("Colonial_Overlord", Variable) & !grepl(":", Variable)) %>%  # Only colonial overlord effects
mutate(Country = sub(".*factor\\(Colonial_Overlord\\)", "", Variable))  # Extract the country name
interaction_effects <- coefficients %>%
filter(grepl("Colonial_Overlord", Variable) & grepl(":", Variable)) #%>%    # Only interaction terms
interaction_effects_clean <- interaction_effects %>%
mutate(Country = sub(".*factor\\(Colonial_Overlord\\)", "", Variable))  # Extract the country name
options(scipen = 999)
# Plot 1: Main Effects of Colonial Overlord
plot1 <- ggplot(main_effects, aes(x = reorder(Country, Estimate), y = Estimate)) +
geom_point() +
geom_errorbar(aes(ymin = Estimate - 1.96 * `Std. Error`, ymax = Estimate + 1.96 * `Std. Error`)) +
labs(title = "Main Effects of Colonial Overlord on GDP per Capita",
x = "Colonial Overlord",
y = "Coefficient Estimate") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels
plot1
# Plot 2: Interaction Effects of Colonial Overlord × Year on GDP per Capita
plot2 <- ggplot(interaction_effects_clean, aes(x = reorder(Country, Estimate), y = Estimate)) +
geom_point() +
geom_errorbar(aes(ymin = Estimate - 1.96 * `Std. Error`, ymax = Estimate + 1.96 * `Std. Error`)) +
labs(title = "Interaction Effects of Colonial Overlord × Year on GDP per Capita",
x = "Colonial Overlord × Year",
y = "Interaction Coefficient Estimate") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plot2
#let's define a function for percent change
pctchange <-function(x) {
pct <- 100*((x - lag(x))/(lag(x)))
return (pct)
}
colonized_data2 <- select(colonized_data, Country, Years_of_Colonization, year, gdpPercap)
colonized_data2
plus100years <- c("India", "Australia", "Hong Kong", "Canada", "South Africa", "Algeria", "Brazil", "Mozambique", "Indonesia", "Suriname", "Puerto Rico", "Kazakhstan", "Georgia", "Moldova", "Czech Republic", "Slovakia", "Romania", "Serbia", "Bulgaria")
plus100years <- colonized_data2 %>%
filter(Country %in% plus100years)
plus100years
under100years <- c("Vietnam", "Morocco", "Congo, Dem Rep.", "Rwanda", "Namibia", "Somalia", "Libya", "Eritrea", "Philippines", "Afghanistan", "Tanzania")
under100years <- colonized_data2 %>%
filter(Country%in%under100years)
under100years
library("ggplot2")
library("dplyr")
over100years
gapminder_unfiltered <- gapminder_unfiltered %>%
mutate(group_label = case_when(
country %in% plus100years ~ "over100years",
country %in% under100years ~ "under100years",
TRUE~ NA_character_)) %>%
filter(!is.na(group_label))
ggplot(gapminder_unfiltered, aes(x = year, y = gdpPercap, group = country)) +
geom_line(aes(color = group_label), alpha = 0.5) +
labs(title = "GDP Comparison: plus100years vs. under100years",
x = "Year", y = "GDP per Capita (USD)") +
theme_minimal() +
theme(legend.position = "right") +
scale_color_manual(values = c("over100years" = "red", "under100years" = "blue"))
knitr::opts_chunk$set(echo = TRUE,
messages = FALSE)
library(tidyverse)
library(gapminder)
library(sf)
gapminder
# Create a dataframe for colonized countries
colonized_data <- data.frame(
Country = c('India', 'Australia', 'Hong Kong, China','Canada', 'South Africa','Algeria', 'Vietnam', 'Morocco', 'Brazil', 'Mozambique',  'Indonesia', 'Suriname', 'Congo, Dem. Rep.', 'Rwanda', 'Namibia', 'Somalia', 'Libya', 'Eritrea', 'Philippines', 'Puerto Rico', 'Kazakhstan', 'Georgia', 'Moldova', 'Afghanistan', 'Tanzania',  'Czech Republic', 'Slovakia', 'Romania',  'Serbia', 'Bulgaria'),
Colonial_Overlord = c('United Kingdom', 'United Kingdom','United Kingdom','United Kingdom', 'United Kingdom', 'France', 'France', 'France', 'Portugal', 'Portugal', 'Netherlands', 'Netherlands', 'Belgium','Belgium', 'Germany', 'Italy', 'Italy','Italy', 'United States', 'United States', 'Russia', 'Russia','Russia', 'United Kingdom', 'Germany', 'Austria', 'Austria','Austria', 'Turkey','Turkey' ),
Years_of_Colonization = c(190, 132, 156, 108, 120, 132, 67, 44, 322, 477, 350, 235, 80, 40, 35, 36, 31, 62, 48, 126, 250, 108,103 ,80, 44,300, 500, 300, 350, 350 )
)
# Save the dataframe as CSV
#dir.create("data")
#write.csv(colonized_data, "data/colonized_countries.csv", row.names = FALSE)
# Create a dataframe for non-colonized countries
not_colonized_data <- data.frame(
Country = c('Japan', 'Korea, Rep.', 'Thailand', 'Turkey', 'Saudi Arabia', 'Iran', 'Iceland',
'Sweden', 'Norway', 'Switzerland', 'Afghanistan', 'Bhutan', 'Nepal', 'Liberia',
'Mongolia', 'Korea, Dem. Rep.', 'Ethiopia', 'Tonga', 'Tibet', 'Haiti',
'Luxembourg', 'Lesotho', 'Malta', 'Swaziland', 'Chile', 'China'),
Reasonably_Prosperous = c('YES', 'YES', 'YES', 'YES', 'YES', 'YES', 'YES',
'YES', 'YES', 'YES', 'NO', 'NO', 'NO', 'NO',
'NO', 'NO', 'NO', 'NO', 'NO', 'NO',
'YES',  'NO', 'YES', 'NO', 'YES', 'NO')
)
# Save the dataframe as CSV
#write.csv(not_colonized_data, "data/not_colonized_countries.csv", row.names = FALSE)
# filtered gapminder
unique(gapminder$country)
# unfiltered gapminder
data("gapminder_unfiltered")
unique(gapminder_unfiltered$country)
# compare the values to your (un-)colonized datasets
sort(unique(colonized_data$Country))
sort(unique(not_colonized_data$Country))
# join gapminder data with your country lists
colonized_data <- colonized_data %>%
left_join(gapminder_unfiltered, by = c("Country" = "country"))
not_colonized_data <- not_colonized_data %>%
left_join(gapminder_unfiltered, by = c("Country" = "country"))
ggplot(colonized_data, aes(x = year, y = gdpPercap, group = Country, color = Country))+
geom_line()+
labs(title = "Mean GDP Over Time by Country",
x = "Year",
y = "Mean GDP (in USD)") +
theme_minimal() +                      # Minimal theme for a clean look
theme(legend.position = "right")
colonized_data %>%
select(Country, Colonial_Overlord) %>%
distinct(Country, Colonial_Overlord)
colonized_summary <- colonized_data %>%
filter(year %in% unique(gapminder$year)) %>%
group_by(Colonial_Overlord, year) %>%
summarize(gdpPerGroup = sum(gdpPercap))
ggplot(colonized_summary, aes(x = year, y = gdpPerGroup, group = Colonial_Overlord, color = Colonial_Overlord))+
geom_line()+
labs(title = "Mean GDP Over Time by Colonial power",
x = "Year",
y = "Mean GDP (in USD)") +
theme_minimal() +                      # Minimal theme for a clean look
theme(legend.position = "right")
colonized_data %>%
filter(Colonial_Overlord == "United Kingdom") %>%
filter(year == 1982 |year == 1983 | year == 1987| year == 1988) %>%
arrange(year)
# years xxx3 and xxx8 seems the problematic ones in the UK case, but others are in the other countries. Use gapminder reduced data years, those seem to exist everywhere?
# Load required libraries
library(ggplot2)
library(ggrepel)
# Assuming your data frame is 'colonized_data'
colonized_summary <- colonized_data %>%
filter(year %in% unique(gapminder$year)) %>%
#filter(!grepl("3$|8$", year)) %>%
group_by(Colonial_Overlord, year) %>%
summarize(gdpPerGroup = sum(gdpPercap))
# Find the last year for each country to label
last_year_data <- colonized_summary %>%
group_by(Colonial_Overlord) %>%
filter(year == max(year))  # Get the data for the last year per country
# Create the plot
ggplot(colonized_summary, aes(x = year, y = log(gdpPerGroup), group = Colonial_Overlord, color = Colonial_Overlord))+
geom_line()+
geom_text_repel(data = last_year_data,      # Use the last year data for labeling
aes(label = Colonial_Overlord),       # Label each country at the last data point
nudge_x = 15,                # Nudges labels slightly to the right for clarity
direction = "y",            # Keep labels vertical
hjust = 0) +                # Align the labels horizontally to the left
labs(title = "Mean GDP Over Time by Colonial power (natural log)",
x = "Year",
y = "Mean GDP (in USD)") +
theme_minimal()  #+                     # Minimal theme for a clean look
#theme(legend.position = "none")             # Hide the legend since we have direct labels
# Find the last year for each country to label
last_year_data <- colonized_summary %>%
group_by(Colonial_Overlord) %>%
filter(year == 1980)  # Get the data for the last year per country
ggplot(colonized_summary %>% filter(year < 1980), aes(x = year, y = log(gdpPerGroup), group = Colonial_Overlord, color = Colonial_Overlord))+
geom_line()+
geom_text_repel(data = last_year_data,      # Use the last year data for labeling
aes(label = Colonial_Overlord),       # Label each country at the last data point
nudge_x = 15,                # Nudges labels slightly to the right for clarity
direction = "y",            # Keep labels vertical
hjust = 0) +                # Align the labels horizontally to the left
labs(title = "Mean GDP Over Time by Colonial power (1950 - 1980)",
x = "Year",
y = "Mean GDP (in USD)") +
theme_minimal()
# let's check their results
ggplot(not_colonized_data, aes(x = year, y = gdpPercap, group = Country, color = Country))+
geom_line()+
# geom_text_repel(data = last_year_data,      # Use the last year data for labeling
#                 aes(label = Colonial_Overlord),       # Label each country at the last data point
#                 nudge_x = 15,                # Nudges labels slightly to the right for clarity
#                 direction = "y",            # Keep labels vertical
#                 hjust = 0) +                # Align the labels horizontally to the left
labs(title = "Not colonized for long (or at all): Mean GDP Over Time",
x = "Year",
y = "Mean GDP percapita (in USD)") +
theme_minimal()
nc_last_year_data <- not_colonized_data %>%
group_by(Country) %>%
filter(year == max(year))  # Get the data for the last year per country
# Expand this chart once it plots as it is rather detailed
not_colonized_data %>%
ggplot(aes(x = year, y = gdpPercap, group = Country, color = Country))+
geom_line()+
geom_text_repel(data = nc_last_year_data,      # Use the last year data for labeling
aes(label = Country),       # Label each country at the last data point
nudge_x = 15,                # Nudges labels slightly to the right for clarity
direction = "y",            # Keep labels vertical
hjust = 0) +                # Align the labels horizontally to the left
labs(title = "Not colonized for long (or at all): Mean GDP Over Time",
x = "Year",
y = "Total GDP (in USD)") +
theme_minimal() +
theme(legend.position = "none")
not_colonized_data <- not_colonized_data %>%
mutate(totalGdp = pop * gdpPercap)
# Consider whether we should be summarizing total or per capita GDP
not_colonized_ntiles <- not_colonized_data %>%
filter(year %in% unique(gapminder$year)) %>%
group_by(year) %>%
mutate(quantileGdp = ntile(gdpPercap, 5))
not_colonized_summary <- not_colonized_ntiles %>%
group_by(year, quantileGdp) %>%
summarize(gdpPerGroup = sum(gdpPercap),
meangdpPerGroup = mean(gdpPercap))
not_colonized_ntiles
# Find the last year for each country to label
ntile_last_year_data <- not_colonized_ntiles %>%
group_by(quantileGdp) %>%
filter(year == max(year)) %>%
summarize(gdpPerGroup = sum(gdpPercap)) # Get the data for the last year per country
# Logarithmic y axis!
ggplot(not_colonized_ntiles, aes(x = year, y = log10(gdpPercap), group = Country, color = Country))+
geom_line()+
geom_text_repel(data = nc_last_year_data,      # Use the last year data for labeling
aes(label = Country),       # Label each country at the last data point
nudge_x = 15,                # Nudges labels slightly to the right for clarity
direction = "y",            # Keep labels vertical
hjust = 0) +                # Align the labels horizontally to the left
labs(title = "Mean GDP Over Time by country",
x = "Year",
y = "Mean GDP (in USD)") +
theme_minimal() +
theme(legend.position = "none")
not_colonized_ntiles
# How are the best and worst countries moving economically over the last 60 years?
not_colonized_summary <- not_colonized_ntiles %>%
arrange(desc(year)) %>%
group_by(year, quantileGdp) %>%
summarize(gdpPerGroup = sum(gdpPercap),
meangdpPerGroup = mean(gdpPercap)) %>%
mutate(quantileGdp = as.factor(quantileGdp))
not_colonized_summary
# Extract data for the last year to use in geom_text_repel
ntile_last_year_data <- not_colonized_summary %>%
group_by(quantileGdp) %>%
filter(year == max(year))  # Extract the last year for each quantile
ntile_last_year_data
ggplot(not_colonized_summary, aes(x = year, y = gdpPerGroup, group = quantileGdp, color = quantileGdp))+
geom_line()+
geom_text_repel(data = ntile_last_year_data,      # Use the last year data for labeling
aes(x = year, y = gdpPerGroup, label = quantileGdp),       # Label each country at the last data point
nudge_x = 5,                # Nudges labels slightly to the right for clarity
direction = "y",            # Keep labels vertical
hjust = 0) +                # Align the labels horizontally to the left
labs(title = "Mean GDP Over Time by quantile",
x = "Year",
y = "Mean GDP (in USD)") +
theme_minimal()
# Who is in groups 1 and 5 at the start and the end?
not_colonized_ntiles %>%
filter(year == 1957 & quantileGdp == 5) %>%
select(Country, gdpPercap)
not_colonized_ntiles %>%
filter(year >2002 & quantileGdp == 5) %>%
select(Country, gdpPercap)
# Where is China in all this and how does its progress compare to e.g. Saudi Arabia?
not_colonized_ntiles %>%
filter(Country == "China") %>%
select(year, gdpPercap, quantileGdp)
not_colonized_ntiles %>%
filter(Country == "Saudi Arabia") %>%
select(year, gdpPercap, quantileGdp)
# Can you think of other 'climbers'?
# Run a basic linear regression model
model <- lm(gdpPercap ~ Colonial_Overlord, data = colonized_data)
# Summary of the regression results
summary(model)
model_interaction <- lm(gdpPercap ~ Years_of_Colonization * factor(Colonial_Overlord), data = colonized_data)
summary(model_interaction)
# Extract model coefficients
coefficients <- as.data.frame(coef(summary(model_interaction)))
# Create a column for variable names
coefficients$Variable <- rownames(coefficients)
# Split into main effects (Colonial_Overlord) and interaction terms (Colonial_Overlord × Year)
main_effects <- coefficients %>%
filter(grepl("Colonial_Overlord", Variable) & !grepl(":", Variable)) %>%  # Only colonial overlord effects
mutate(Country = sub(".*factor\\(Colonial_Overlord\\)", "", Variable))  # Extract the country name
interaction_effects <- coefficients %>%
filter(grepl("Colonial_Overlord", Variable) & grepl(":", Variable)) #%>%    # Only interaction terms
interaction_effects_clean <- interaction_effects %>%
mutate(Country = sub(".*factor\\(Colonial_Overlord\\)", "", Variable))  # Extract the country name
options(scipen = 999)
# Plot 1: Main Effects of Colonial Overlord
plot1 <- ggplot(main_effects, aes(x = reorder(Country, Estimate), y = Estimate)) +
geom_point() +
geom_errorbar(aes(ymin = Estimate - 1.96 * `Std. Error`, ymax = Estimate + 1.96 * `Std. Error`)) +
labs(title = "Main Effects of Colonial Overlord on GDP per Capita",
x = "Colonial Overlord",
y = "Coefficient Estimate") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels
plot1
# Plot 2: Interaction Effects of Colonial Overlord × Year on GDP per Capita
plot2 <- ggplot(interaction_effects_clean, aes(x = reorder(Country, Estimate), y = Estimate)) +
geom_point() +
geom_errorbar(aes(ymin = Estimate - 1.96 * `Std. Error`, ymax = Estimate + 1.96 * `Std. Error`)) +
labs(title = "Interaction Effects of Colonial Overlord × Year on GDP per Capita",
x = "Colonial Overlord × Year",
y = "Interaction Coefficient Estimate") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plot2
#let's define a function for percent change
pctchange <-function(x) {
pct <- 100*((x - lag(x))/(lag(x)))
return (pct)
}
colonized_data2 <- select(colonized_data, Country, Years_of_Colonization, year, gdpPercap)
colonized_data2
plus100years <- c("India", "Australia", "Hong Kong", "Canada", "South Africa", "Algeria", "Brazil", "Mozambique", "Indonesia", "Suriname", "Puerto Rico", "Kazakhstan", "Georgia", "Moldova", "Czech Republic", "Slovakia", "Romania", "Serbia", "Bulgaria")
under100years <- c("Vietnam", "Morocco", "Congo, Dem Rep.", "Rwanda", "Namibia", "Somalia", "Libya", "Eritrea", "Philippines", "Afghanistan", "Tanzania")
under100years
library("ggplot2")
library("dplyr")
gapminder_unfiltered <- gapminder_unfiltered %>%
mutate(group_label = case_when(
country %in% plus100years ~ "over100years",
country %in% under100years ~ "under100years")) %>%
filter(!is.na(group_label))
ggplot(gapminder_unfiltered, aes(x = year, y = gdpPercap, group = country)) +
geom_line(aes(color = group_label), alpha = 0.5) +
labs(title = "GDP Comparison: plus100years vs. under100years",
x = "Year", y = "GDP per Capita (USD)") +
theme_minimal() +
theme(legend.position = "right") +
scale_color_manual(values = c("over100years" = "red", "under100years" = "blue"))
